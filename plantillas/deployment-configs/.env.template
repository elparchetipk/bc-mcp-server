# ================================
# VARIABLES DE ENTORNO - PLANTILLA
# ================================
#
# Este archivo contiene todas las variables de entorno necesarias
# para ejecutar un servidor MCP completo.
#
# INSTRUCCIONES:
# 1. Copia este archivo como .env en la raíz de tu proyecto
# 2. Modifica los valores según tu entorno
# 3. NUNCA commitees el archivo .env a git
# 4. Para producción, usa secretos seguros (Azure Key Vault, AWS Secrets Manager, etc.)

# ================================
# CONFIGURACIÓN GENERAL
# ================================
NODE_ENV=development
LOG_LEVEL=debug
PORT=3000

# ================================
# BASE DE DATOS POSTGRESQL
# ================================
# URL completa de conexión
DATABASE_URL=postgresql://postgres:password@localhost:5432/mcp_development

# Componentes individuales (para herramientas que los requieran)
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password
POSTGRES_DB=mcp_development

# Pool de conexiones
DATABASE_POOL_MIN=2
DATABASE_POOL_MAX=10

# ================================
# REDIS (CACHE Y SESIONES)
# ================================
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

# ================================
# AUTENTICACIÓN Y SEGURIDAD
# ================================
# JWT Secret (generar uno fuerte para producción)
JWT_SECRET=tu-jwt-secret-super-seguro-cambiame
JWT_EXPIRES_IN=7d

# API Keys
API_KEY=tu-api-key-super-secreta
ENCRYPTION_KEY=tu-encryption-key-de-32-caracteres

# CORS Settings
CORS_ORIGIN=http://localhost:3000,http://localhost:8000

# ================================
# APIS EXTERNAS
# ================================
# OpenAI (ejemplo)
OPENAI_API_KEY=sk-tu-openai-api-key
OPENAI_ORG_ID=org-tu-organizacion

# Anthropic (ejemplo)
ANTHROPIC_API_KEY=sk-ant-tu-anthropic-key

# Google (ejemplo)
GOOGLE_API_KEY=tu-google-api-key
GOOGLE_CLIENT_ID=tu-google-client-id
GOOGLE_CLIENT_SECRET=tu-google-client-secret

# ================================
# SERVICIOS EN LA NUBE
# ================================
# AWS
AWS_ACCESS_KEY_ID=tu-aws-access-key
AWS_SECRET_ACCESS_KEY=tu-aws-secret-key
AWS_REGION=us-east-1
AWS_S3_BUCKET=tu-bucket-name

# Azure
AZURE_CLIENT_ID=tu-azure-client-id
AZURE_CLIENT_SECRET=tu-azure-client-secret
AZURE_TENANT_ID=tu-azure-tenant-id

# ================================
# MONITOREO Y OBSERVABILIDAD
# ================================
# Grafana
GRAFANA_PASSWORD=admin123

# Prometheus
PROMETHEUS_RETENTION=15d

# Sentry (manejo de errores)
SENTRY_DSN=https://tu-sentry-dsn@sentry.io/proyecto

# ================================
# CONFIGURACIÓN DE EMAIL
# ================================
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=tu-email@gmail.com
SMTP_PASSWORD=tu-app-password
EMAIL_FROM=noreply@tudominio.com

# ================================
# CONFIGURACIÓN DE DESARROLLO
# ================================
# Hot reload
HOT_RELOAD=true

# Debug
DEBUG=mcp:*

# Testing
TEST_DATABASE_URL=postgresql://postgres:password@localhost:5432/mcp_test

# ================================
# CONFIGURACIÓN DE PRODUCCIÓN
# ================================
# SSL/TLS
SSL_CERT_PATH=/path/to/cert.pem
SSL_KEY_PATH=/path/to/key.pem

# Rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Dominio
DOMAIN=tudominio.com
SUBDOMAIN=api

# ================================
# CONFIGURACIÓN ESPECÍFICA MCP
# ================================
# Configuraciones específicas del protocolo MCP
MCP_SERVER_NAME=mi-servidor-mcp
MCP_SERVER_VERSION=1.0.0
MCP_TIMEOUT=30000
MCP_MAX_CONNECTIONS=100

# ================================
# NOTAS IMPORTANTES
# ================================
#
# SEGURIDAD:
# - En producción, usar gestores de secretos profesionales
# - Rotar claves regularmente
# - Usar HTTPS siempre en producción
# - Validar todas las entradas
#
# PERFORMANCE:
# - Ajustar pools de conexión según carga esperada
# - Configurar Redis para persistencia si es necesario
# - Usar CDN para assets estáticos
#
# MONITOREO:
# - Configurar alertas en Grafana
# - Implementar health checks
# - Logs estructurados para mejor debugging
