# Docker Compose para desarrollo local completo
# Incluye servidor MCP, base de datos, herramientas de desarrollo
version: "3.8"

services:
  # Servidor MCP principal
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.development
    container_name: mcp-server-dev
    ports:
      - "3000:3000"
      - "9229:9229" # Puerto para debugging
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/mcp_dev
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app
      - /app/node_modules # Evitar conflictos con node_modules local
    depends_on:
      - postgres
      - redis
    networks:
      - mcp-network
    restart: unless-stopped
    command: pnpm run dev

  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: mcp-postgres-dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mcp_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mcp-network
    restart: unless-stopped

  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    container_name: mcp-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mcp-network
    restart: unless-stopped

  # Adminer para gesti√≥n de BD (alternativa a pgAdmin)
  adminer:
    image: adminer:4-standalone
    container_name: mcp-adminer-dev
    ports:
      - "8080:8080"
    networks:
      - mcp-network
    restart: unless-stopped

  # Servidor web para pruebas frontend (opcional)
  nginx:
    image: nginx:alpine
    container_name: mcp-nginx-dev
    ports:
      - "8000:80"
    volumes:
      - ./public:/usr/share/nginx/html:ro
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    networks:
      - mcp-network
    restart: unless-stopped

  # Herramienta de monitoreo (opcional)
  prometheus:
    image: prom/prometheus:latest
    container_name: mcp-prometheus-dev
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - mcp-network
    restart: unless-stopped

networks:
  mcp-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
